export class CIScanner{#e;#t;#s;#i=null;#o=null;#r=null;#n=null;#a=!1;#c=null;#h=null;#d=null;onDataReceived=null;onStarting=null;constructor(e){this.#e=(()=>{try{return Uint8Array.from(atob(e.replace(/-/g,"+").replace(/_/g,"/")),(e=>e.charCodeAt(0)))}catch(e){return new Uint8Array(0)}})(),this.#t=new CIScannerEventScheduler(this),this.#s=new AudioWorkletMessageDispatcher,this.#c=this.#u().catch((e=>{this.#d=e})),this.#h=this.#c.then((()=>this.#l())).catch((e=>{this.#d=e}))}async start(e){await this.#t.enqueue(this.#p,e).catch((e=>{throw e}))}async#p(e){if(!this.#a){if(this.#a=!0,null!==this.#d){const e=this.#d;throw this.#C(),e}await this.#c.then((()=>this.#w(e))).then((()=>this.#h)).then((()=>this.#k())).then((()=>this.#m())).catch((async e=>{throw await this.#S(),e}))}}async#w(e){if(null!==this.#i)try{const t=this.#i;await t.resume();const s="boolean"==typeof e&&e,i=await navigator.mediaDevices.getUserMedia({audio:{echoCancellation:s,autoGainControl:!1,noiseSuppression:!1,sampleRate:48e3},video:!1}).catch((e=>{let t;throw t="NotAllowedError"===e.name||"PermissionDeniedError"===e.name?new CIScannerError("media device permission denied",301):new CIScannerError("media device access failed. error message: "+e.message,300),t}));this.#n=i;const o=t.createMediaStreamSource(i);this.#r=o}catch(e){throw e instanceof CIScannerError?e:new CIScannerError(e,100)}}async#k(){null!==this.#o&&(this.#o.port.postMessage({type:"START"}),await this.#s.waitForMessage("VERIFY_CONFIG_TOKEN_RESULT").catch((e=>{throw new CIScannerError(e,401)})))}async#m(){if(null!==this.#i&&null!==this.#r&&null!==this.#o)try{this.#r.connect(this.#o),"function"==typeof this.onStarting&&this.onStarting(this.#i,this.#r),await this.#i.resume(),this.#s.addListener("DATA_RECEIVED",(e=>{"function"==typeof this.onDataReceived&&this.onDataReceived(e.data,e.band,e.bufferUsageRate)}))}catch(e){throw new CIScannerError(e,100)}}async stop(){await this.#t.enqueue(this.#S)}async#S(){this.#o&&this.#o.port.postMessage({type:"STOP"}),this.#n&&(this.#n.getAudioTracks().forEach((e=>{e.stop()})),this.#n=null),this.#r&&(this.#r.disconnect(),this.#r=null),this.#i&&await this.#i.suspend(),this.#C()}#C(){this.#a=!1,this.#d=null}async#u(){if(null===this.#i)try{const e=new(window.AudioContext||window.webkitAudioContext)({sampleRate:48e3,latencyHint:"playback"});this.#i=e,"suspended"!==this.#i.state&&await this.#i.suspend()}catch(e){throw new CIScannerError(e,201)}}#g(){this.#i&&this.#i.close(),this.#i=null}async#l(){if(null!==this.#o)return;const e=this.#s.waitForMessage("DECODER_INIT"),t=new URL(import.meta.url),s=await this.#i.audioWorklet.addModule(new URL("tssciv2-processor.min.js",t).href).then((()=>{const e=new AudioWorkletNode(this.#i,"tssciv2-processor");return e.port.onmessage=e=>{this.#s.dispatchMessage(e)},e})).catch((e=>{throw new CIScannerError(e,203)}));this.#o=s,await e.then((()=>{this.#o.port.postMessage({type:"SET_CONFIG_TOKEN",content:this.#e.buffer})})).catch((e=>{throw new CIScannerError(e,204)}))}#N(){this.#r&&this.#r.disconnect(),this.#o&&this.#o.disconnect(),this.#o=null}}class CIScannerEventScheduler{#f;constructor(e){this.queue=[],this.isProcessing=!1,this.#f=e}enqueue(e,...t){return new Promise(((s,i)=>{this.queue.push({eventFunc:e.bind(this.#f,...t),resolve:s,reject:i}),this.#y()}))}async#y(){if(this.isProcessing)return;if(0===this.queue.length)return;this.isProcessing=!0;const{eventFunc:e,resolve:t,reject:s}=this.queue.shift();try{t(await e())}catch(e){s(e)}finally{this.isProcessing=!1,this.#y()}}}class AudioWorkletMessageDispatcher{constructor(){this.promiseHandler={},this.persistentCallback={}}waitForMessage(e){return new Promise(((t,s)=>{this.promiseHandler[e]={resolve:t,reject:s}}))}addListener(e,t){this.persistentCallback[e]=t}removeAllListeners(e){delete this.persistentCallback[e]}dispatchMessage(e){const{type:t,success:s,content:i,error:o}=e.data;if(this.promiseHandler[t]){const{resolve:e,reject:r}=this.promiseHandler[t];s?e(i):r(o),delete this.promiseHandler[t]}this.persistentCallback[t]&&(s?this.persistentCallback[t](i):this.persistentCallback[t](o))}}export class CIScannerError extends Error{constructor(e,t){super(e),this.name="CIScannerError",this.code=t}}
